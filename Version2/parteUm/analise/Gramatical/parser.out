Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROG
Rule 1     PROG -> Public Class Id LeftKey Public Static Void Main LeftParenthesis String LeftBracket RightBracket Args RightParenthesis LeftKey CMDS RightKey METODO RightKey
Rule 2     METODO -> Public Static Double Id LeftParenthesis PARAMS RightParenthesis LeftKey CMDS Return EXPRESSAO Semicolon RightKey
Rule 3     METODO -> VOID
Rule 4     PARAMS -> Double Id MAIS_PARAMS
Rule 5     PARAMS -> VOID
Rule 6     MAIS_PARAMS -> Comma PARAMS
Rule 7     MAIS_PARAMS -> VOID
Rule 8     DC -> VAR MAIS_CMDS
Rule 9     VAR -> Double VARS
Rule 10    VARS -> Id MAIS_VAR
Rule 11    MAIS_VAR -> Comma VARS
Rule 12    MAIS_VAR -> VOID
Rule 13    CMDS -> CMD MAIS_CMDS
Rule 14    CMDS -> CMD_COND CMDS
Rule 15    CMDS -> DC
Rule 16    CMDS -> VOID
Rule 17    MAIS_CMDS -> Semicolon CMDS
Rule 18    CMD_COND -> If LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey PFALSA
Rule 19    CMD_COND -> While LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey
Rule 20    CMD -> Print LeftParenthesis EXPRESSAO RightParenthesis
Rule 21    CMD -> Id RESTO_IDENT
Rule 22    PFALSA -> Else LeftKey CMDS RightKey
Rule 23    PFALSA -> VOID
Rule 24    RESTO_IDENT -> Assignment EXP_IDENT
Rule 25    RESTO_IDENT -> LeftParenthesis LISTA_ARG RightParenthesis
Rule 26    LISTA_ARG -> ARGUMENTOS
Rule 27    LISTA_ARG -> VOID
Rule 28    ARGUMENTOS -> Id MAIS_IDENT
Rule 29    MAIS_IDENT -> Comma ARGUMENTOS
Rule 30    MAIS_IDENT -> VOID
Rule 31    EXP_IDENT -> EXPRESSAO
Rule 32    EXP_IDENT -> LerDouble LeftParenthesis RightParenthesis
Rule 33    CONDICAO -> EXPRESSAO Relational EXPRESSAO
Rule 34    EXPRESSAO -> TERMO OUTROS_TERMOS
Rule 35    TERMO -> OP_UN FATOR MAIS_FATORES
Rule 36    OP_UN -> Sub
Rule 37    OP_UN -> VOID
Rule 38    FATOR -> Id
Rule 39    FATOR -> Number
Rule 40    FATOR -> LeftParenthesis EXPRESSAO RightParenthesis
Rule 41    OUTROS_TERMOS -> Add TERMO OUTROS_TERMOS
Rule 42    OUTROS_TERMOS -> Sub TERMO OUTROS_TERMOS
Rule 43    OUTROS_TERMOS -> VOID
Rule 44    MAIS_FATORES -> Mult FATOR MAIS_FATORES
Rule 45    MAIS_FATORES -> VOID
Rule 46    VOID -> <empty>

Terminals, with rules where they appear

Add                  : 41
Args                 : 1
Assignment           : 24
Class                : 1
Comma                : 6 11 29
Double               : 2 4 9
Else                 : 22
Id                   : 1 2 4 10 21 28 38
If                   : 18
LeftBracket          : 1
LeftKey              : 1 1 2 18 19 22
LeftParenthesis      : 1 2 18 19 20 25 32 40
LerDouble            : 32
Main                 : 1
Mult                 : 44
Number               : 39
Print                : 20
Public               : 1 1 2
Relational           : 33
Return               : 2
RightBracket         : 1
RightKey             : 1 1 2 18 19 22
RightParenthesis     : 1 2 18 19 20 25 32 40
Semicolon            : 2 17
Static               : 1 2
String               : 1
Sub                  : 36 42
Void                 : 1
While                : 19
error                : 

Nonterminals, with rules where they appear

ARGUMENTOS           : 26 29
CMD                  : 13
CMDS                 : 1 2 14 17 18 19 22
CMD_COND             : 14
CONDICAO             : 18 19
DC                   : 15
EXPRESSAO            : 2 20 31 33 33 40
EXP_IDENT            : 24
FATOR                : 35 44
LISTA_ARG            : 25
MAIS_CMDS            : 8 13
MAIS_FATORES         : 35 44
MAIS_IDENT           : 28
MAIS_PARAMS          : 4
MAIS_VAR             : 10
METODO               : 1
OP_UN                : 35
OUTROS_TERMOS        : 34 41 42
PARAMS               : 2 6
PFALSA               : 18
PROG                 : 0
RESTO_IDENT          : 21
TERMO                : 34 41 42
VAR                  : 8
VARS                 : 9 11
VOID                 : 3 5 7 12 16 23 27 30 37 43 45

Parsing method: LALR

state 0

    (0) S' -> . PROG
    (1) PROG -> . Public Class Id LeftKey Public Static Void Main LeftParenthesis String LeftBracket RightBracket Args RightParenthesis LeftKey CMDS RightKey METODO RightKey

    Public          shift and go to state 2

    PROG                           shift and go to state 1

state 1

    (0) S' -> PROG .



state 2

    (1) PROG -> Public . Class Id LeftKey Public Static Void Main LeftParenthesis String LeftBracket RightBracket Args RightParenthesis LeftKey CMDS RightKey METODO RightKey

    Class           shift and go to state 3


state 3

    (1) PROG -> Public Class . Id LeftKey Public Static Void Main LeftParenthesis String LeftBracket RightBracket Args RightParenthesis LeftKey CMDS RightKey METODO RightKey

    Id              shift and go to state 4


state 4

    (1) PROG -> Public Class Id . LeftKey Public Static Void Main LeftParenthesis String LeftBracket RightBracket Args RightParenthesis LeftKey CMDS RightKey METODO RightKey

    LeftKey         shift and go to state 5


state 5

    (1) PROG -> Public Class Id LeftKey . Public Static Void Main LeftParenthesis String LeftBracket RightBracket Args RightParenthesis LeftKey CMDS RightKey METODO RightKey

    Public          shift and go to state 6


state 6

    (1) PROG -> Public Class Id LeftKey Public . Static Void Main LeftParenthesis String LeftBracket RightBracket Args RightParenthesis LeftKey CMDS RightKey METODO RightKey

    Static          shift and go to state 7


state 7

    (1) PROG -> Public Class Id LeftKey Public Static . Void Main LeftParenthesis String LeftBracket RightBracket Args RightParenthesis LeftKey CMDS RightKey METODO RightKey

    Void            shift and go to state 8


state 8

    (1) PROG -> Public Class Id LeftKey Public Static Void . Main LeftParenthesis String LeftBracket RightBracket Args RightParenthesis LeftKey CMDS RightKey METODO RightKey

    Main            shift and go to state 9


state 9

    (1) PROG -> Public Class Id LeftKey Public Static Void Main . LeftParenthesis String LeftBracket RightBracket Args RightParenthesis LeftKey CMDS RightKey METODO RightKey

    LeftParenthesis shift and go to state 10


state 10

    (1) PROG -> Public Class Id LeftKey Public Static Void Main LeftParenthesis . String LeftBracket RightBracket Args RightParenthesis LeftKey CMDS RightKey METODO RightKey

    String          shift and go to state 11


state 11

    (1) PROG -> Public Class Id LeftKey Public Static Void Main LeftParenthesis String . LeftBracket RightBracket Args RightParenthesis LeftKey CMDS RightKey METODO RightKey

    LeftBracket     shift and go to state 12


state 12

    (1) PROG -> Public Class Id LeftKey Public Static Void Main LeftParenthesis String LeftBracket . RightBracket Args RightParenthesis LeftKey CMDS RightKey METODO RightKey

    RightBracket    shift and go to state 13


state 13

    (1) PROG -> Public Class Id LeftKey Public Static Void Main LeftParenthesis String LeftBracket RightBracket . Args RightParenthesis LeftKey CMDS RightKey METODO RightKey

    Args            shift and go to state 14


state 14

    (1) PROG -> Public Class Id LeftKey Public Static Void Main LeftParenthesis String LeftBracket RightBracket Args . RightParenthesis LeftKey CMDS RightKey METODO RightKey

    RightParenthesis shift and go to state 15


state 15

    (1) PROG -> Public Class Id LeftKey Public Static Void Main LeftParenthesis String LeftBracket RightBracket Args RightParenthesis . LeftKey CMDS RightKey METODO RightKey

    LeftKey         shift and go to state 16


state 16

    (1) PROG -> Public Class Id LeftKey Public Static Void Main LeftParenthesis String LeftBracket RightBracket Args RightParenthesis LeftKey . CMDS RightKey METODO RightKey
    (13) CMDS -> . CMD MAIS_CMDS
    (14) CMDS -> . CMD_COND CMDS
    (15) CMDS -> . DC
    (16) CMDS -> . VOID
    (20) CMD -> . Print LeftParenthesis EXPRESSAO RightParenthesis
    (21) CMD -> . Id RESTO_IDENT
    (18) CMD_COND -> . If LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey PFALSA
    (19) CMD_COND -> . While LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey
    (8) DC -> . VAR MAIS_CMDS
    (46) VOID -> .
    (9) VAR -> . Double VARS

    Print           shift and go to state 23
    Id              shift and go to state 17
    If              shift and go to state 24
    While           shift and go to state 25
    RightKey        reduce using rule 46 (VOID -> .)
    Double          shift and go to state 27

    CMDS                           shift and go to state 18
    CMD                            shift and go to state 19
    CMD_COND                       shift and go to state 20
    DC                             shift and go to state 21
    VOID                           shift and go to state 22
    VAR                            shift and go to state 26

state 17

    (21) CMD -> Id . RESTO_IDENT
    (24) RESTO_IDENT -> . Assignment EXP_IDENT
    (25) RESTO_IDENT -> . LeftParenthesis LISTA_ARG RightParenthesis

    Assignment      shift and go to state 29
    LeftParenthesis shift and go to state 30

    RESTO_IDENT                    shift and go to state 28

state 18

    (1) PROG -> Public Class Id LeftKey Public Static Void Main LeftParenthesis String LeftBracket RightBracket Args RightParenthesis LeftKey CMDS . RightKey METODO RightKey

    RightKey        shift and go to state 31


state 19

    (13) CMDS -> CMD . MAIS_CMDS
    (17) MAIS_CMDS -> . Semicolon CMDS

    Semicolon       shift and go to state 33

    MAIS_CMDS                      shift and go to state 32

state 20

    (14) CMDS -> CMD_COND . CMDS
    (13) CMDS -> . CMD MAIS_CMDS
    (14) CMDS -> . CMD_COND CMDS
    (15) CMDS -> . DC
    (16) CMDS -> . VOID
    (20) CMD -> . Print LeftParenthesis EXPRESSAO RightParenthesis
    (21) CMD -> . Id RESTO_IDENT
    (18) CMD_COND -> . If LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey PFALSA
    (19) CMD_COND -> . While LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey
    (8) DC -> . VAR MAIS_CMDS
    (46) VOID -> .
    (9) VAR -> . Double VARS

    Print           shift and go to state 23
    Id              shift and go to state 17
    If              shift and go to state 24
    While           shift and go to state 25
    RightKey        reduce using rule 46 (VOID -> .)
    Return          reduce using rule 46 (VOID -> .)
    Double          shift and go to state 27

    CMD_COND                       shift and go to state 20
    CMDS                           shift and go to state 34
    CMD                            shift and go to state 19
    DC                             shift and go to state 21
    VOID                           shift and go to state 22
    VAR                            shift and go to state 26

state 21

    (15) CMDS -> DC .

    RightKey        reduce using rule 15 (CMDS -> DC .)
    Return          reduce using rule 15 (CMDS -> DC .)


state 22

    (16) CMDS -> VOID .

    RightKey        reduce using rule 16 (CMDS -> VOID .)
    Return          reduce using rule 16 (CMDS -> VOID .)


state 23

    (20) CMD -> Print . LeftParenthesis EXPRESSAO RightParenthesis

    LeftParenthesis shift and go to state 35


state 24

    (18) CMD_COND -> If . LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey PFALSA

    LeftParenthesis shift and go to state 36


state 25

    (19) CMD_COND -> While . LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey

    LeftParenthesis shift and go to state 37


state 26

    (8) DC -> VAR . MAIS_CMDS
    (17) MAIS_CMDS -> . Semicolon CMDS

    Semicolon       shift and go to state 33

    MAIS_CMDS                      shift and go to state 38

state 27

    (9) VAR -> Double . VARS
    (10) VARS -> . Id MAIS_VAR

    Id              shift and go to state 40

    VARS                           shift and go to state 39

state 28

    (21) CMD -> Id RESTO_IDENT .

    Semicolon       reduce using rule 21 (CMD -> Id RESTO_IDENT .)


state 29

    (24) RESTO_IDENT -> Assignment . EXP_IDENT
    (31) EXP_IDENT -> . EXPRESSAO
    (32) EXP_IDENT -> . LerDouble LeftParenthesis RightParenthesis
    (34) EXPRESSAO -> . TERMO OUTROS_TERMOS
    (35) TERMO -> . OP_UN FATOR MAIS_FATORES
    (36) OP_UN -> . Sub
    (37) OP_UN -> . VOID
    (46) VOID -> .

    LerDouble       shift and go to state 43
    Sub             shift and go to state 46
    Id              reduce using rule 46 (VOID -> .)
    Number          reduce using rule 46 (VOID -> .)
    LeftParenthesis reduce using rule 46 (VOID -> .)

    EXP_IDENT                      shift and go to state 41
    EXPRESSAO                      shift and go to state 42
    TERMO                          shift and go to state 44
    OP_UN                          shift and go to state 45
    VOID                           shift and go to state 47

state 30

    (25) RESTO_IDENT -> LeftParenthesis . LISTA_ARG RightParenthesis
    (26) LISTA_ARG -> . ARGUMENTOS
    (27) LISTA_ARG -> . VOID
    (28) ARGUMENTOS -> . Id MAIS_IDENT
    (46) VOID -> .

    Id              shift and go to state 51
    RightParenthesis reduce using rule 46 (VOID -> .)

    LISTA_ARG                      shift and go to state 48
    ARGUMENTOS                     shift and go to state 49
    VOID                           shift and go to state 50

state 31

    (1) PROG -> Public Class Id LeftKey Public Static Void Main LeftParenthesis String LeftBracket RightBracket Args RightParenthesis LeftKey CMDS RightKey . METODO RightKey
    (2) METODO -> . Public Static Double Id LeftParenthesis PARAMS RightParenthesis LeftKey CMDS Return EXPRESSAO Semicolon RightKey
    (3) METODO -> . VOID
    (46) VOID -> .

    Public          shift and go to state 52
    RightKey        reduce using rule 46 (VOID -> .)

    METODO                         shift and go to state 53
    VOID                           shift and go to state 54

state 32

    (13) CMDS -> CMD MAIS_CMDS .

    RightKey        reduce using rule 13 (CMDS -> CMD MAIS_CMDS .)
    Return          reduce using rule 13 (CMDS -> CMD MAIS_CMDS .)


state 33

    (17) MAIS_CMDS -> Semicolon . CMDS
    (13) CMDS -> . CMD MAIS_CMDS
    (14) CMDS -> . CMD_COND CMDS
    (15) CMDS -> . DC
    (16) CMDS -> . VOID
    (20) CMD -> . Print LeftParenthesis EXPRESSAO RightParenthesis
    (21) CMD -> . Id RESTO_IDENT
    (18) CMD_COND -> . If LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey PFALSA
    (19) CMD_COND -> . While LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey
    (8) DC -> . VAR MAIS_CMDS
    (46) VOID -> .
    (9) VAR -> . Double VARS

    Print           shift and go to state 23
    Id              shift and go to state 17
    If              shift and go to state 24
    While           shift and go to state 25
    RightKey        reduce using rule 46 (VOID -> .)
    Return          reduce using rule 46 (VOID -> .)
    Double          shift and go to state 27

    CMDS                           shift and go to state 55
    CMD                            shift and go to state 19
    CMD_COND                       shift and go to state 20
    DC                             shift and go to state 21
    VOID                           shift and go to state 22
    VAR                            shift and go to state 26

state 34

    (14) CMDS -> CMD_COND CMDS .

    RightKey        reduce using rule 14 (CMDS -> CMD_COND CMDS .)
    Return          reduce using rule 14 (CMDS -> CMD_COND CMDS .)


state 35

    (20) CMD -> Print LeftParenthesis . EXPRESSAO RightParenthesis
    (34) EXPRESSAO -> . TERMO OUTROS_TERMOS
    (35) TERMO -> . OP_UN FATOR MAIS_FATORES
    (36) OP_UN -> . Sub
    (37) OP_UN -> . VOID
    (46) VOID -> .

    Sub             shift and go to state 46
    Id              reduce using rule 46 (VOID -> .)
    Number          reduce using rule 46 (VOID -> .)
    LeftParenthesis reduce using rule 46 (VOID -> .)

    EXPRESSAO                      shift and go to state 56
    TERMO                          shift and go to state 44
    OP_UN                          shift and go to state 45
    VOID                           shift and go to state 47

state 36

    (18) CMD_COND -> If LeftParenthesis . CONDICAO RightParenthesis LeftKey CMDS RightKey PFALSA
    (33) CONDICAO -> . EXPRESSAO Relational EXPRESSAO
    (34) EXPRESSAO -> . TERMO OUTROS_TERMOS
    (35) TERMO -> . OP_UN FATOR MAIS_FATORES
    (36) OP_UN -> . Sub
    (37) OP_UN -> . VOID
    (46) VOID -> .

    Sub             shift and go to state 46
    Id              reduce using rule 46 (VOID -> .)
    Number          reduce using rule 46 (VOID -> .)
    LeftParenthesis reduce using rule 46 (VOID -> .)

    CONDICAO                       shift and go to state 57
    EXPRESSAO                      shift and go to state 58
    TERMO                          shift and go to state 44
    OP_UN                          shift and go to state 45
    VOID                           shift and go to state 47

state 37

    (19) CMD_COND -> While LeftParenthesis . CONDICAO RightParenthesis LeftKey CMDS RightKey
    (33) CONDICAO -> . EXPRESSAO Relational EXPRESSAO
    (34) EXPRESSAO -> . TERMO OUTROS_TERMOS
    (35) TERMO -> . OP_UN FATOR MAIS_FATORES
    (36) OP_UN -> . Sub
    (37) OP_UN -> . VOID
    (46) VOID -> .

    Sub             shift and go to state 46
    Id              reduce using rule 46 (VOID -> .)
    Number          reduce using rule 46 (VOID -> .)
    LeftParenthesis reduce using rule 46 (VOID -> .)

    CONDICAO                       shift and go to state 59
    EXPRESSAO                      shift and go to state 58
    TERMO                          shift and go to state 44
    OP_UN                          shift and go to state 45
    VOID                           shift and go to state 47

state 38

    (8) DC -> VAR MAIS_CMDS .

    RightKey        reduce using rule 8 (DC -> VAR MAIS_CMDS .)
    Return          reduce using rule 8 (DC -> VAR MAIS_CMDS .)


state 39

    (9) VAR -> Double VARS .

    Semicolon       reduce using rule 9 (VAR -> Double VARS .)


state 40

    (10) VARS -> Id . MAIS_VAR
    (11) MAIS_VAR -> . Comma VARS
    (12) MAIS_VAR -> . VOID
    (46) VOID -> .

    Comma           shift and go to state 61
    Semicolon       reduce using rule 46 (VOID -> .)

    MAIS_VAR                       shift and go to state 60
    VOID                           shift and go to state 62

state 41

    (24) RESTO_IDENT -> Assignment EXP_IDENT .

    Semicolon       reduce using rule 24 (RESTO_IDENT -> Assignment EXP_IDENT .)


state 42

    (31) EXP_IDENT -> EXPRESSAO .

    Semicolon       reduce using rule 31 (EXP_IDENT -> EXPRESSAO .)


state 43

    (32) EXP_IDENT -> LerDouble . LeftParenthesis RightParenthesis

    LeftParenthesis shift and go to state 63


state 44

    (34) EXPRESSAO -> TERMO . OUTROS_TERMOS
    (41) OUTROS_TERMOS -> . Add TERMO OUTROS_TERMOS
    (42) OUTROS_TERMOS -> . Sub TERMO OUTROS_TERMOS
    (43) OUTROS_TERMOS -> . VOID
    (46) VOID -> .

    Add             shift and go to state 65
    Sub             shift and go to state 66
    Semicolon       reduce using rule 46 (VOID -> .)
    RightParenthesis reduce using rule 46 (VOID -> .)
    Relational      reduce using rule 46 (VOID -> .)

    OUTROS_TERMOS                  shift and go to state 64
    VOID                           shift and go to state 67

state 45

    (35) TERMO -> OP_UN . FATOR MAIS_FATORES
    (38) FATOR -> . Id
    (39) FATOR -> . Number
    (40) FATOR -> . LeftParenthesis EXPRESSAO RightParenthesis

    Id              shift and go to state 69
    Number          shift and go to state 70
    LeftParenthesis shift and go to state 71

    FATOR                          shift and go to state 68

state 46

    (36) OP_UN -> Sub .

    Id              reduce using rule 36 (OP_UN -> Sub .)
    Number          reduce using rule 36 (OP_UN -> Sub .)
    LeftParenthesis reduce using rule 36 (OP_UN -> Sub .)


state 47

    (37) OP_UN -> VOID .

    Id              reduce using rule 37 (OP_UN -> VOID .)
    Number          reduce using rule 37 (OP_UN -> VOID .)
    LeftParenthesis reduce using rule 37 (OP_UN -> VOID .)


state 48

    (25) RESTO_IDENT -> LeftParenthesis LISTA_ARG . RightParenthesis

    RightParenthesis shift and go to state 72


state 49

    (26) LISTA_ARG -> ARGUMENTOS .

    RightParenthesis reduce using rule 26 (LISTA_ARG -> ARGUMENTOS .)


state 50

    (27) LISTA_ARG -> VOID .

    RightParenthesis reduce using rule 27 (LISTA_ARG -> VOID .)


state 51

    (28) ARGUMENTOS -> Id . MAIS_IDENT
    (29) MAIS_IDENT -> . Comma ARGUMENTOS
    (30) MAIS_IDENT -> . VOID
    (46) VOID -> .

    Comma           shift and go to state 74
    RightParenthesis reduce using rule 46 (VOID -> .)

    MAIS_IDENT                     shift and go to state 73
    VOID                           shift and go to state 75

state 52

    (2) METODO -> Public . Static Double Id LeftParenthesis PARAMS RightParenthesis LeftKey CMDS Return EXPRESSAO Semicolon RightKey

    Static          shift and go to state 76


state 53

    (1) PROG -> Public Class Id LeftKey Public Static Void Main LeftParenthesis String LeftBracket RightBracket Args RightParenthesis LeftKey CMDS RightKey METODO . RightKey

    RightKey        shift and go to state 77


state 54

    (3) METODO -> VOID .

    RightKey        reduce using rule 3 (METODO -> VOID .)


state 55

    (17) MAIS_CMDS -> Semicolon CMDS .

    RightKey        reduce using rule 17 (MAIS_CMDS -> Semicolon CMDS .)
    Return          reduce using rule 17 (MAIS_CMDS -> Semicolon CMDS .)


state 56

    (20) CMD -> Print LeftParenthesis EXPRESSAO . RightParenthesis

    RightParenthesis shift and go to state 78


state 57

    (18) CMD_COND -> If LeftParenthesis CONDICAO . RightParenthesis LeftKey CMDS RightKey PFALSA

    RightParenthesis shift and go to state 79


state 58

    (33) CONDICAO -> EXPRESSAO . Relational EXPRESSAO

    Relational      shift and go to state 80


state 59

    (19) CMD_COND -> While LeftParenthesis CONDICAO . RightParenthesis LeftKey CMDS RightKey

    RightParenthesis shift and go to state 81


state 60

    (10) VARS -> Id MAIS_VAR .

    Semicolon       reduce using rule 10 (VARS -> Id MAIS_VAR .)


state 61

    (11) MAIS_VAR -> Comma . VARS
    (10) VARS -> . Id MAIS_VAR

    Id              shift and go to state 40

    VARS                           shift and go to state 82

state 62

    (12) MAIS_VAR -> VOID .

    Semicolon       reduce using rule 12 (MAIS_VAR -> VOID .)


state 63

    (32) EXP_IDENT -> LerDouble LeftParenthesis . RightParenthesis

    RightParenthesis shift and go to state 83


state 64

    (34) EXPRESSAO -> TERMO OUTROS_TERMOS .

    Semicolon       reduce using rule 34 (EXPRESSAO -> TERMO OUTROS_TERMOS .)
    RightParenthesis reduce using rule 34 (EXPRESSAO -> TERMO OUTROS_TERMOS .)
    Relational      reduce using rule 34 (EXPRESSAO -> TERMO OUTROS_TERMOS .)


state 65

    (41) OUTROS_TERMOS -> Add . TERMO OUTROS_TERMOS
    (35) TERMO -> . OP_UN FATOR MAIS_FATORES
    (36) OP_UN -> . Sub
    (37) OP_UN -> . VOID
    (46) VOID -> .

    Sub             shift and go to state 46
    Id              reduce using rule 46 (VOID -> .)
    Number          reduce using rule 46 (VOID -> .)
    LeftParenthesis reduce using rule 46 (VOID -> .)

    TERMO                          shift and go to state 84
    OP_UN                          shift and go to state 45
    VOID                           shift and go to state 47

state 66

    (42) OUTROS_TERMOS -> Sub . TERMO OUTROS_TERMOS
    (35) TERMO -> . OP_UN FATOR MAIS_FATORES
    (36) OP_UN -> . Sub
    (37) OP_UN -> . VOID
    (46) VOID -> .

    Sub             shift and go to state 46
    Id              reduce using rule 46 (VOID -> .)
    Number          reduce using rule 46 (VOID -> .)
    LeftParenthesis reduce using rule 46 (VOID -> .)

    TERMO                          shift and go to state 85
    OP_UN                          shift and go to state 45
    VOID                           shift and go to state 47

state 67

    (43) OUTROS_TERMOS -> VOID .

    Semicolon       reduce using rule 43 (OUTROS_TERMOS -> VOID .)
    RightParenthesis reduce using rule 43 (OUTROS_TERMOS -> VOID .)
    Relational      reduce using rule 43 (OUTROS_TERMOS -> VOID .)


state 68

    (35) TERMO -> OP_UN FATOR . MAIS_FATORES
    (44) MAIS_FATORES -> . Mult FATOR MAIS_FATORES
    (45) MAIS_FATORES -> . VOID
    (46) VOID -> .

    Mult            shift and go to state 87
    Add             reduce using rule 46 (VOID -> .)
    Sub             reduce using rule 46 (VOID -> .)
    Semicolon       reduce using rule 46 (VOID -> .)
    RightParenthesis reduce using rule 46 (VOID -> .)
    Relational      reduce using rule 46 (VOID -> .)

    MAIS_FATORES                   shift and go to state 86
    VOID                           shift and go to state 88

state 69

    (38) FATOR -> Id .

    Mult            reduce using rule 38 (FATOR -> Id .)
    Add             reduce using rule 38 (FATOR -> Id .)
    Sub             reduce using rule 38 (FATOR -> Id .)
    Semicolon       reduce using rule 38 (FATOR -> Id .)
    RightParenthesis reduce using rule 38 (FATOR -> Id .)
    Relational      reduce using rule 38 (FATOR -> Id .)


state 70

    (39) FATOR -> Number .

    Mult            reduce using rule 39 (FATOR -> Number .)
    Add             reduce using rule 39 (FATOR -> Number .)
    Sub             reduce using rule 39 (FATOR -> Number .)
    Semicolon       reduce using rule 39 (FATOR -> Number .)
    RightParenthesis reduce using rule 39 (FATOR -> Number .)
    Relational      reduce using rule 39 (FATOR -> Number .)


state 71

    (40) FATOR -> LeftParenthesis . EXPRESSAO RightParenthesis
    (34) EXPRESSAO -> . TERMO OUTROS_TERMOS
    (35) TERMO -> . OP_UN FATOR MAIS_FATORES
    (36) OP_UN -> . Sub
    (37) OP_UN -> . VOID
    (46) VOID -> .

    Sub             shift and go to state 46
    Id              reduce using rule 46 (VOID -> .)
    Number          reduce using rule 46 (VOID -> .)
    LeftParenthesis reduce using rule 46 (VOID -> .)

    EXPRESSAO                      shift and go to state 89
    TERMO                          shift and go to state 44
    OP_UN                          shift and go to state 45
    VOID                           shift and go to state 47

state 72

    (25) RESTO_IDENT -> LeftParenthesis LISTA_ARG RightParenthesis .

    Semicolon       reduce using rule 25 (RESTO_IDENT -> LeftParenthesis LISTA_ARG RightParenthesis .)


state 73

    (28) ARGUMENTOS -> Id MAIS_IDENT .

    RightParenthesis reduce using rule 28 (ARGUMENTOS -> Id MAIS_IDENT .)


state 74

    (29) MAIS_IDENT -> Comma . ARGUMENTOS
    (28) ARGUMENTOS -> . Id MAIS_IDENT

    Id              shift and go to state 51

    ARGUMENTOS                     shift and go to state 90

state 75

    (30) MAIS_IDENT -> VOID .

    RightParenthesis reduce using rule 30 (MAIS_IDENT -> VOID .)


state 76

    (2) METODO -> Public Static . Double Id LeftParenthesis PARAMS RightParenthesis LeftKey CMDS Return EXPRESSAO Semicolon RightKey

    Double          shift and go to state 91


state 77

    (1) PROG -> Public Class Id LeftKey Public Static Void Main LeftParenthesis String LeftBracket RightBracket Args RightParenthesis LeftKey CMDS RightKey METODO RightKey .

    $end            reduce using rule 1 (PROG -> Public Class Id LeftKey Public Static Void Main LeftParenthesis String LeftBracket RightBracket Args RightParenthesis LeftKey CMDS RightKey METODO RightKey .)


state 78

    (20) CMD -> Print LeftParenthesis EXPRESSAO RightParenthesis .

    Semicolon       reduce using rule 20 (CMD -> Print LeftParenthesis EXPRESSAO RightParenthesis .)


state 79

    (18) CMD_COND -> If LeftParenthesis CONDICAO RightParenthesis . LeftKey CMDS RightKey PFALSA

    LeftKey         shift and go to state 92


state 80

    (33) CONDICAO -> EXPRESSAO Relational . EXPRESSAO
    (34) EXPRESSAO -> . TERMO OUTROS_TERMOS
    (35) TERMO -> . OP_UN FATOR MAIS_FATORES
    (36) OP_UN -> . Sub
    (37) OP_UN -> . VOID
    (46) VOID -> .

    Sub             shift and go to state 46
    Id              reduce using rule 46 (VOID -> .)
    Number          reduce using rule 46 (VOID -> .)
    LeftParenthesis reduce using rule 46 (VOID -> .)

    EXPRESSAO                      shift and go to state 93
    TERMO                          shift and go to state 44
    OP_UN                          shift and go to state 45
    VOID                           shift and go to state 47

state 81

    (19) CMD_COND -> While LeftParenthesis CONDICAO RightParenthesis . LeftKey CMDS RightKey

    LeftKey         shift and go to state 94


state 82

    (11) MAIS_VAR -> Comma VARS .

    Semicolon       reduce using rule 11 (MAIS_VAR -> Comma VARS .)


state 83

    (32) EXP_IDENT -> LerDouble LeftParenthesis RightParenthesis .

    Semicolon       reduce using rule 32 (EXP_IDENT -> LerDouble LeftParenthesis RightParenthesis .)


state 84

    (41) OUTROS_TERMOS -> Add TERMO . OUTROS_TERMOS
    (41) OUTROS_TERMOS -> . Add TERMO OUTROS_TERMOS
    (42) OUTROS_TERMOS -> . Sub TERMO OUTROS_TERMOS
    (43) OUTROS_TERMOS -> . VOID
    (46) VOID -> .

    Add             shift and go to state 65
    Sub             shift and go to state 66
    Semicolon       reduce using rule 46 (VOID -> .)
    RightParenthesis reduce using rule 46 (VOID -> .)
    Relational      reduce using rule 46 (VOID -> .)

    OUTROS_TERMOS                  shift and go to state 95
    VOID                           shift and go to state 67

state 85

    (42) OUTROS_TERMOS -> Sub TERMO . OUTROS_TERMOS
    (41) OUTROS_TERMOS -> . Add TERMO OUTROS_TERMOS
    (42) OUTROS_TERMOS -> . Sub TERMO OUTROS_TERMOS
    (43) OUTROS_TERMOS -> . VOID
    (46) VOID -> .

    Add             shift and go to state 65
    Sub             shift and go to state 66
    Semicolon       reduce using rule 46 (VOID -> .)
    RightParenthesis reduce using rule 46 (VOID -> .)
    Relational      reduce using rule 46 (VOID -> .)

    OUTROS_TERMOS                  shift and go to state 96
    VOID                           shift and go to state 67

state 86

    (35) TERMO -> OP_UN FATOR MAIS_FATORES .

    Add             reduce using rule 35 (TERMO -> OP_UN FATOR MAIS_FATORES .)
    Sub             reduce using rule 35 (TERMO -> OP_UN FATOR MAIS_FATORES .)
    Semicolon       reduce using rule 35 (TERMO -> OP_UN FATOR MAIS_FATORES .)
    RightParenthesis reduce using rule 35 (TERMO -> OP_UN FATOR MAIS_FATORES .)
    Relational      reduce using rule 35 (TERMO -> OP_UN FATOR MAIS_FATORES .)


state 87

    (44) MAIS_FATORES -> Mult . FATOR MAIS_FATORES
    (38) FATOR -> . Id
    (39) FATOR -> . Number
    (40) FATOR -> . LeftParenthesis EXPRESSAO RightParenthesis

    Id              shift and go to state 69
    Number          shift and go to state 70
    LeftParenthesis shift and go to state 71

    FATOR                          shift and go to state 97

state 88

    (45) MAIS_FATORES -> VOID .

    Add             reduce using rule 45 (MAIS_FATORES -> VOID .)
    Sub             reduce using rule 45 (MAIS_FATORES -> VOID .)
    Semicolon       reduce using rule 45 (MAIS_FATORES -> VOID .)
    RightParenthesis reduce using rule 45 (MAIS_FATORES -> VOID .)
    Relational      reduce using rule 45 (MAIS_FATORES -> VOID .)


state 89

    (40) FATOR -> LeftParenthesis EXPRESSAO . RightParenthesis

    RightParenthesis shift and go to state 98


state 90

    (29) MAIS_IDENT -> Comma ARGUMENTOS .

    RightParenthesis reduce using rule 29 (MAIS_IDENT -> Comma ARGUMENTOS .)


state 91

    (2) METODO -> Public Static Double . Id LeftParenthesis PARAMS RightParenthesis LeftKey CMDS Return EXPRESSAO Semicolon RightKey

    Id              shift and go to state 99


state 92

    (18) CMD_COND -> If LeftParenthesis CONDICAO RightParenthesis LeftKey . CMDS RightKey PFALSA
    (13) CMDS -> . CMD MAIS_CMDS
    (14) CMDS -> . CMD_COND CMDS
    (15) CMDS -> . DC
    (16) CMDS -> . VOID
    (20) CMD -> . Print LeftParenthesis EXPRESSAO RightParenthesis
    (21) CMD -> . Id RESTO_IDENT
    (18) CMD_COND -> . If LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey PFALSA
    (19) CMD_COND -> . While LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey
    (8) DC -> . VAR MAIS_CMDS
    (46) VOID -> .
    (9) VAR -> . Double VARS

    Print           shift and go to state 23
    Id              shift and go to state 17
    If              shift and go to state 24
    While           shift and go to state 25
    RightKey        reduce using rule 46 (VOID -> .)
    Double          shift and go to state 27

    CMDS                           shift and go to state 100
    CMD                            shift and go to state 19
    CMD_COND                       shift and go to state 20
    DC                             shift and go to state 21
    VOID                           shift and go to state 22
    VAR                            shift and go to state 26

state 93

    (33) CONDICAO -> EXPRESSAO Relational EXPRESSAO .

    RightParenthesis reduce using rule 33 (CONDICAO -> EXPRESSAO Relational EXPRESSAO .)


state 94

    (19) CMD_COND -> While LeftParenthesis CONDICAO RightParenthesis LeftKey . CMDS RightKey
    (13) CMDS -> . CMD MAIS_CMDS
    (14) CMDS -> . CMD_COND CMDS
    (15) CMDS -> . DC
    (16) CMDS -> . VOID
    (20) CMD -> . Print LeftParenthesis EXPRESSAO RightParenthesis
    (21) CMD -> . Id RESTO_IDENT
    (18) CMD_COND -> . If LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey PFALSA
    (19) CMD_COND -> . While LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey
    (8) DC -> . VAR MAIS_CMDS
    (46) VOID -> .
    (9) VAR -> . Double VARS

    Print           shift and go to state 23
    Id              shift and go to state 17
    If              shift and go to state 24
    While           shift and go to state 25
    RightKey        reduce using rule 46 (VOID -> .)
    Double          shift and go to state 27

    CMDS                           shift and go to state 101
    CMD                            shift and go to state 19
    CMD_COND                       shift and go to state 20
    DC                             shift and go to state 21
    VOID                           shift and go to state 22
    VAR                            shift and go to state 26

state 95

    (41) OUTROS_TERMOS -> Add TERMO OUTROS_TERMOS .

    Semicolon       reduce using rule 41 (OUTROS_TERMOS -> Add TERMO OUTROS_TERMOS .)
    RightParenthesis reduce using rule 41 (OUTROS_TERMOS -> Add TERMO OUTROS_TERMOS .)
    Relational      reduce using rule 41 (OUTROS_TERMOS -> Add TERMO OUTROS_TERMOS .)


state 96

    (42) OUTROS_TERMOS -> Sub TERMO OUTROS_TERMOS .

    Semicolon       reduce using rule 42 (OUTROS_TERMOS -> Sub TERMO OUTROS_TERMOS .)
    RightParenthesis reduce using rule 42 (OUTROS_TERMOS -> Sub TERMO OUTROS_TERMOS .)
    Relational      reduce using rule 42 (OUTROS_TERMOS -> Sub TERMO OUTROS_TERMOS .)


state 97

    (44) MAIS_FATORES -> Mult FATOR . MAIS_FATORES
    (44) MAIS_FATORES -> . Mult FATOR MAIS_FATORES
    (45) MAIS_FATORES -> . VOID
    (46) VOID -> .

    Mult            shift and go to state 87
    Add             reduce using rule 46 (VOID -> .)
    Sub             reduce using rule 46 (VOID -> .)
    Semicolon       reduce using rule 46 (VOID -> .)
    RightParenthesis reduce using rule 46 (VOID -> .)
    Relational      reduce using rule 46 (VOID -> .)

    MAIS_FATORES                   shift and go to state 102
    VOID                           shift and go to state 88

state 98

    (40) FATOR -> LeftParenthesis EXPRESSAO RightParenthesis .

    Mult            reduce using rule 40 (FATOR -> LeftParenthesis EXPRESSAO RightParenthesis .)
    Add             reduce using rule 40 (FATOR -> LeftParenthesis EXPRESSAO RightParenthesis .)
    Sub             reduce using rule 40 (FATOR -> LeftParenthesis EXPRESSAO RightParenthesis .)
    Semicolon       reduce using rule 40 (FATOR -> LeftParenthesis EXPRESSAO RightParenthesis .)
    RightParenthesis reduce using rule 40 (FATOR -> LeftParenthesis EXPRESSAO RightParenthesis .)
    Relational      reduce using rule 40 (FATOR -> LeftParenthesis EXPRESSAO RightParenthesis .)


state 99

    (2) METODO -> Public Static Double Id . LeftParenthesis PARAMS RightParenthesis LeftKey CMDS Return EXPRESSAO Semicolon RightKey

    LeftParenthesis shift and go to state 103


state 100

    (18) CMD_COND -> If LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS . RightKey PFALSA

    RightKey        shift and go to state 104


state 101

    (19) CMD_COND -> While LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS . RightKey

    RightKey        shift and go to state 105


state 102

    (44) MAIS_FATORES -> Mult FATOR MAIS_FATORES .

    Add             reduce using rule 44 (MAIS_FATORES -> Mult FATOR MAIS_FATORES .)
    Sub             reduce using rule 44 (MAIS_FATORES -> Mult FATOR MAIS_FATORES .)
    Semicolon       reduce using rule 44 (MAIS_FATORES -> Mult FATOR MAIS_FATORES .)
    RightParenthesis reduce using rule 44 (MAIS_FATORES -> Mult FATOR MAIS_FATORES .)
    Relational      reduce using rule 44 (MAIS_FATORES -> Mult FATOR MAIS_FATORES .)


state 103

    (2) METODO -> Public Static Double Id LeftParenthesis . PARAMS RightParenthesis LeftKey CMDS Return EXPRESSAO Semicolon RightKey
    (4) PARAMS -> . Double Id MAIS_PARAMS
    (5) PARAMS -> . VOID
    (46) VOID -> .

    Double          shift and go to state 106
    RightParenthesis reduce using rule 46 (VOID -> .)

    PARAMS                         shift and go to state 107
    VOID                           shift and go to state 108

state 104

    (18) CMD_COND -> If LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey . PFALSA
    (22) PFALSA -> . Else LeftKey CMDS RightKey
    (23) PFALSA -> . VOID
    (46) VOID -> .

    Else            shift and go to state 110
    Print           reduce using rule 46 (VOID -> .)
    Id              reduce using rule 46 (VOID -> .)
    If              reduce using rule 46 (VOID -> .)
    While           reduce using rule 46 (VOID -> .)
    Double          reduce using rule 46 (VOID -> .)
    RightKey        reduce using rule 46 (VOID -> .)
    Return          reduce using rule 46 (VOID -> .)

    PFALSA                         shift and go to state 109
    VOID                           shift and go to state 111

state 105

    (19) CMD_COND -> While LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey .

    Print           reduce using rule 19 (CMD_COND -> While LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey .)
    Id              reduce using rule 19 (CMD_COND -> While LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey .)
    If              reduce using rule 19 (CMD_COND -> While LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey .)
    While           reduce using rule 19 (CMD_COND -> While LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey .)
    Double          reduce using rule 19 (CMD_COND -> While LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey .)
    RightKey        reduce using rule 19 (CMD_COND -> While LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey .)
    Return          reduce using rule 19 (CMD_COND -> While LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey .)


state 106

    (4) PARAMS -> Double . Id MAIS_PARAMS

    Id              shift and go to state 112


state 107

    (2) METODO -> Public Static Double Id LeftParenthesis PARAMS . RightParenthesis LeftKey CMDS Return EXPRESSAO Semicolon RightKey

    RightParenthesis shift and go to state 113


state 108

    (5) PARAMS -> VOID .

    RightParenthesis reduce using rule 5 (PARAMS -> VOID .)


state 109

    (18) CMD_COND -> If LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey PFALSA .

    Print           reduce using rule 18 (CMD_COND -> If LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey PFALSA .)
    Id              reduce using rule 18 (CMD_COND -> If LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey PFALSA .)
    If              reduce using rule 18 (CMD_COND -> If LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey PFALSA .)
    While           reduce using rule 18 (CMD_COND -> If LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey PFALSA .)
    Double          reduce using rule 18 (CMD_COND -> If LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey PFALSA .)
    RightKey        reduce using rule 18 (CMD_COND -> If LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey PFALSA .)
    Return          reduce using rule 18 (CMD_COND -> If LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey PFALSA .)


state 110

    (22) PFALSA -> Else . LeftKey CMDS RightKey

    LeftKey         shift and go to state 114


state 111

    (23) PFALSA -> VOID .

    Print           reduce using rule 23 (PFALSA -> VOID .)
    Id              reduce using rule 23 (PFALSA -> VOID .)
    If              reduce using rule 23 (PFALSA -> VOID .)
    While           reduce using rule 23 (PFALSA -> VOID .)
    Double          reduce using rule 23 (PFALSA -> VOID .)
    RightKey        reduce using rule 23 (PFALSA -> VOID .)
    Return          reduce using rule 23 (PFALSA -> VOID .)


state 112

    (4) PARAMS -> Double Id . MAIS_PARAMS
    (6) MAIS_PARAMS -> . Comma PARAMS
    (7) MAIS_PARAMS -> . VOID
    (46) VOID -> .

    Comma           shift and go to state 116
    RightParenthesis reduce using rule 46 (VOID -> .)

    MAIS_PARAMS                    shift and go to state 115
    VOID                           shift and go to state 117

state 113

    (2) METODO -> Public Static Double Id LeftParenthesis PARAMS RightParenthesis . LeftKey CMDS Return EXPRESSAO Semicolon RightKey

    LeftKey         shift and go to state 118


state 114

    (22) PFALSA -> Else LeftKey . CMDS RightKey
    (13) CMDS -> . CMD MAIS_CMDS
    (14) CMDS -> . CMD_COND CMDS
    (15) CMDS -> . DC
    (16) CMDS -> . VOID
    (20) CMD -> . Print LeftParenthesis EXPRESSAO RightParenthesis
    (21) CMD -> . Id RESTO_IDENT
    (18) CMD_COND -> . If LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey PFALSA
    (19) CMD_COND -> . While LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey
    (8) DC -> . VAR MAIS_CMDS
    (46) VOID -> .
    (9) VAR -> . Double VARS

    Print           shift and go to state 23
    Id              shift and go to state 17
    If              shift and go to state 24
    While           shift and go to state 25
    RightKey        reduce using rule 46 (VOID -> .)
    Double          shift and go to state 27

    CMDS                           shift and go to state 119
    CMD                            shift and go to state 19
    CMD_COND                       shift and go to state 20
    DC                             shift and go to state 21
    VOID                           shift and go to state 22
    VAR                            shift and go to state 26

state 115

    (4) PARAMS -> Double Id MAIS_PARAMS .

    RightParenthesis reduce using rule 4 (PARAMS -> Double Id MAIS_PARAMS .)


state 116

    (6) MAIS_PARAMS -> Comma . PARAMS
    (4) PARAMS -> . Double Id MAIS_PARAMS
    (5) PARAMS -> . VOID
    (46) VOID -> .

    Double          shift and go to state 106
    RightParenthesis reduce using rule 46 (VOID -> .)

    PARAMS                         shift and go to state 120
    VOID                           shift and go to state 108

state 117

    (7) MAIS_PARAMS -> VOID .

    RightParenthesis reduce using rule 7 (MAIS_PARAMS -> VOID .)


state 118

    (2) METODO -> Public Static Double Id LeftParenthesis PARAMS RightParenthesis LeftKey . CMDS Return EXPRESSAO Semicolon RightKey
    (13) CMDS -> . CMD MAIS_CMDS
    (14) CMDS -> . CMD_COND CMDS
    (15) CMDS -> . DC
    (16) CMDS -> . VOID
    (20) CMD -> . Print LeftParenthesis EXPRESSAO RightParenthesis
    (21) CMD -> . Id RESTO_IDENT
    (18) CMD_COND -> . If LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey PFALSA
    (19) CMD_COND -> . While LeftParenthesis CONDICAO RightParenthesis LeftKey CMDS RightKey
    (8) DC -> . VAR MAIS_CMDS
    (46) VOID -> .
    (9) VAR -> . Double VARS

    Print           shift and go to state 23
    Id              shift and go to state 17
    If              shift and go to state 24
    While           shift and go to state 25
    Return          reduce using rule 46 (VOID -> .)
    Double          shift and go to state 27

    CMDS                           shift and go to state 121
    CMD                            shift and go to state 19
    CMD_COND                       shift and go to state 20
    DC                             shift and go to state 21
    VOID                           shift and go to state 22
    VAR                            shift and go to state 26

state 119

    (22) PFALSA -> Else LeftKey CMDS . RightKey

    RightKey        shift and go to state 122


state 120

    (6) MAIS_PARAMS -> Comma PARAMS .

    RightParenthesis reduce using rule 6 (MAIS_PARAMS -> Comma PARAMS .)


state 121

    (2) METODO -> Public Static Double Id LeftParenthesis PARAMS RightParenthesis LeftKey CMDS . Return EXPRESSAO Semicolon RightKey

    Return          shift and go to state 123


state 122

    (22) PFALSA -> Else LeftKey CMDS RightKey .

    Print           reduce using rule 22 (PFALSA -> Else LeftKey CMDS RightKey .)
    Id              reduce using rule 22 (PFALSA -> Else LeftKey CMDS RightKey .)
    If              reduce using rule 22 (PFALSA -> Else LeftKey CMDS RightKey .)
    While           reduce using rule 22 (PFALSA -> Else LeftKey CMDS RightKey .)
    Double          reduce using rule 22 (PFALSA -> Else LeftKey CMDS RightKey .)
    RightKey        reduce using rule 22 (PFALSA -> Else LeftKey CMDS RightKey .)
    Return          reduce using rule 22 (PFALSA -> Else LeftKey CMDS RightKey .)


state 123

    (2) METODO -> Public Static Double Id LeftParenthesis PARAMS RightParenthesis LeftKey CMDS Return . EXPRESSAO Semicolon RightKey
    (34) EXPRESSAO -> . TERMO OUTROS_TERMOS
    (35) TERMO -> . OP_UN FATOR MAIS_FATORES
    (36) OP_UN -> . Sub
    (37) OP_UN -> . VOID
    (46) VOID -> .

    Sub             shift and go to state 46
    Id              reduce using rule 46 (VOID -> .)
    Number          reduce using rule 46 (VOID -> .)
    LeftParenthesis reduce using rule 46 (VOID -> .)

    EXPRESSAO                      shift and go to state 124
    TERMO                          shift and go to state 44
    OP_UN                          shift and go to state 45
    VOID                           shift and go to state 47

state 124

    (2) METODO -> Public Static Double Id LeftParenthesis PARAMS RightParenthesis LeftKey CMDS Return EXPRESSAO . Semicolon RightKey

    Semicolon       shift and go to state 125


state 125

    (2) METODO -> Public Static Double Id LeftParenthesis PARAMS RightParenthesis LeftKey CMDS Return EXPRESSAO Semicolon . RightKey

    RightKey        shift and go to state 126


state 126

    (2) METODO -> Public Static Double Id LeftParenthesis PARAMS RightParenthesis LeftKey CMDS Return EXPRESSAO Semicolon RightKey .

    RightKey        reduce using rule 2 (METODO -> Public Static Double Id LeftParenthesis PARAMS RightParenthesis LeftKey CMDS Return EXPRESSAO Semicolon RightKey .)

